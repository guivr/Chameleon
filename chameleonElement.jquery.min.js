function css(t){var e=document.styleSheets,a={};for(var n in e){var r=e[n].rules||e[n].cssRules;for(var i in r)t.is(r[i].selectorText)&&(a=$.extend(a,css2json(r[i].style),css2json(t.attr("style"))))}return a}function css2json(t){var e={};if(!t)return e;if(t instanceof CSSStyleDeclaration)for(var a in t)t[a].toLowerCase&&(e[t[a].toLowerCase()]=t[t[a]]);else if("string"==typeof t){t=t.split("; ");for(var a in t){var n=t[a].split(": ");e[n[0].toLowerCase()]=n[1]}}return e}!function(t){t.fn.chameleonElement=function(e){var a=t(this),n=e.element,r={},i=css(t(n));return t(this).hasClass("chameleon-listener")||(t(n).attrchange({callback:function(){setTimeout(function(){a.chameleonElement({element:n,inheritAll:!1,inherit:e.inherit})},200)}}),t(this).addClass("chameleon-listener")),this.each(function(){if(e.inheritAll===!0)t(this).css(i);else{for(prop in e.inherit)r[prop]=t(n).css(e.inherit[prop]);t(this).css(r)}})}}(jQuery),function(t){function e(){var t=document.createElement("p"),e=!1;if(t.addEventListener)t.addEventListener("DOMAttrModified",function(){e=!0},!1);else{if(!t.attachEvent)return!1;t.attachEvent("onDOMAttrModified",function(){e=!0})}return t.setAttribute("id","target"),e}function a(e,a){if(e){var n=this.data("attr-old-value");if(a.attributeName.indexOf("style")>=0){n.style||(n.style={});var r=a.attributeName.split(".");a.attributeName=r[0],a.oldValue=n.style[r[1]],a.newValue=r[1]+":"+this.prop("style")[t.camelCase(r[1])],n.style[r[1]]=a.newValue}else a.oldValue=n[a.attributeName],a.newValue=this.attr(a.attributeName),n[a.attributeName]=a.newValue;this.data("attr-old-value",n)}}var n=window.MutationObserver||window.WebKitMutationObserver;t.fn.attrchange=function(r,i){if(t(this).addClass("chameleon-listener"),"object"==typeof r){var s={trackValues:!1,callback:t.noop};if("function"==typeof r?s.callback=r:t.extend(s,r),s.trackValues&&this.each(function(e,a){for(var n,r={},e=0,i=a.attributes,s=i.length;s>e;e++)n=i.item(e),r[n.nodeName]=n.value;t(this).data("attr-old-value",r)}),n){var o={subtree:!1,attributes:!0,attributeOldValue:s.trackValues},c=new n(function(e){e.forEach(function(e){var a=e.target;s.trackValues&&(e.newValue=t(a).attr(e.attributeName)),"connected"===t(a).data("attrchange-status")&&s.callback.call(a,e)})});return this.data("attrchange-method","Mutation Observer").data("attrchange-status","connected").data("attrchange-obs",c).each(function(){c.observe(this,o)})}return e()?this.data("attrchange-method","DOMAttrModified").data("attrchange-status","connected").on("DOMAttrModified",function(e){e.originalEvent&&(e=e.originalEvent),e.attributeName=e.attrName,e.oldValue=e.prevValue,"connected"===t(this).data("attrchange-status")&&s.callback.call(this,e)}):"onpropertychange"in document.body?this.data("attrchange-method","propertychange").data("attrchange-status","connected").on("propertychange",function(e){e.attributeName=window.event.propertyName,a.call(t(this),s.trackValues,e),"connected"===t(this).data("attrchange-status")&&s.callback.call(this,e)}):this}return"string"==typeof r&&t.fn.attrchange.hasOwnProperty("extensions")&&t.fn.attrchange.extensions.hasOwnProperty(r)?t.fn.attrchange.extensions[r].call(this,i):void 0}}(jQuery);